-- MySQL Script generated by MySQL Workbench
-- Mon May 23 11:13:28 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema Entreprise de location de film
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Entreprise de location de film
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Entreprise de location de film` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `Entreprise de location de film` ;

-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Infos catégorie de films`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Infos catégorie de films` (
  `Action` INT NOT NULL,
  `Comédie` VARCHAR(15) NOT NULL,
  `Aventure` VARCHAR(15) NOT NULL,
  `Drame` VARCHAR(15) NOT NULL,
  `Horreur` VARCHAR(15) NOT NULL,
  `Romance` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`Action`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Infos clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Infos clients` (
  `Nom du client` VARCHAR(10) NOT NULL,
  `Prenoms du clients` VARCHAR(25) NOT NULL,
  `Email du client` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`Nom du client`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Infos films`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Infos films` (
  `Titre du film` VARCHAR(10) NOT NULL,
  `Date de sortie du film` VARCHAR(15) NOT NULL,
  `Durée du film` VARCHAR(5) NOT NULL,
  `Nom du réalisateur` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`Titre du film`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Les payements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Les payements` (
  `Date de paiement` DATE NOT NULL,
  `Description` VARCHAR(15) NOT NULL,
  `Montant` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`Date de paiement`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Suivi des entrées`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Suivi des entrées` (
  `Date de création` DATE NOT NULL,
  `Date de dernière modification` DATE NOT NULL,
  PRIMARY KEY (`Date de création`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Infos films_has_Infos clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Infos films_has_Infos clients` (
  `Infos films_Titre du film` VARCHAR(10) NOT NULL,
  `Infos clients_Nom du client` VARCHAR(10) COLLATE 'DEFAULT' NOT NULL,
  `Date de location` VARCHAR(45) NULL,
  `Date de retour` DATE NULL,
  PRIMARY KEY (`Infos films_Titre du film`, `Infos clients_Nom du client`),
  INDEX `fk_Infos films_has_Infos clients_Infos clients1_idx` (`Infos clients_Nom du client` ASC) VISIBLE,
  INDEX `fk_Infos films_has_Infos clients_Infos films_idx` (`Infos films_Titre du film` ASC) VISIBLE,
  CONSTRAINT `fk_Infos films_has_Infos clients_Infos films`
    FOREIGN KEY (`Infos films_Titre du film`)
    REFERENCES `Entreprise de location de film`.`Infos films` (`Titre du film`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Infos films_has_Infos clients_Infos clients1`
    FOREIGN KEY (`Infos clients_Nom du client`)
    REFERENCES `Entreprise de location de film`.`Infos clients` (`Nom du client`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Les payements_has_Infos clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Les payements_has_Infos clients` (
  `Les payements_Date de paiement` DATE NOT NULL,
  `Infos clients_Nom du client` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`Les payements_Date de paiement`, `Infos clients_Nom du client`),
  INDEX `fk_Les payements_has_Infos clients_Infos clients1_idx` (`Infos clients_Nom du client` ASC) VISIBLE,
  INDEX `fk_Les payements_has_Infos clients_Les payements1_idx` (`Les payements_Date de paiement` ASC) VISIBLE,
  CONSTRAINT `fk_Les payements_has_Infos clients_Les payements1`
    FOREIGN KEY (`Les payements_Date de paiement`)
    REFERENCES `Entreprise de location de film`.`Les payements` (`Date de paiement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Les payements_has_Infos clients_Infos clients1`
    FOREIGN KEY (`Infos clients_Nom du client`)
    REFERENCES `Entreprise de location de film`.`Infos clients` (`Nom du client`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Infos films_has_Suivi des entrées`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Infos films_has_Suivi des entrées` (
  `Infos films_Titre du film` VARCHAR(10) NOT NULL,
  `Suivi des entrées_Date de création` DATE NOT NULL,
  PRIMARY KEY (`Infos films_Titre du film`, `Suivi des entrées_Date de création`),
  INDEX `fk_Infos films_has_Suivi des entrées_Suivi des entrées1_idx` (`Suivi des entrées_Date de création` ASC) VISIBLE,
  INDEX `fk_Infos films_has_Suivi des entrées_Infos films1_idx` (`Infos films_Titre du film` ASC) VISIBLE,
  CONSTRAINT `fk_Infos films_has_Suivi des entrées_Infos films1`
    FOREIGN KEY (`Infos films_Titre du film`)
    REFERENCES `Entreprise de location de film`.`Infos films` (`Titre du film`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Infos films_has_Suivi des entrées_Suivi des entrées1`
    FOREIGN KEY (`Suivi des entrées_Date de création`)
    REFERENCES `Entreprise de location de film`.`Suivi des entrées` (`Date de création`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Les payements_has_Infos catégorie de films`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Les payements_has_Infos catégorie de films` (
  `Les payements_Date de paiement` DATE NOT NULL,
  `Infos catégorie de films_Action` INT NOT NULL,
  PRIMARY KEY (`Les payements_Date de paiement`, `Infos catégorie de films_Action`),
  INDEX `fk_Les payements_has_Infos catégorie de films_Infos catég_idx` (`Infos catégorie de films_Action` ASC) VISIBLE,
  INDEX `fk_Les payements_has_Infos catégorie de films_Les payement_idx` (`Les payements_Date de paiement` ASC) VISIBLE,
  CONSTRAINT `fk_Les payements_has_Infos catégorie de films_Les payements1`
    FOREIGN KEY (`Les payements_Date de paiement`)
    REFERENCES `Entreprise de location de film`.`Les payements` (`Date de paiement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Les payements_has_Infos catégorie de films_Infos catégor1`
    FOREIGN KEY (`Infos catégorie de films_Action`)
    REFERENCES `Entreprise de location de film`.`Infos catégorie de films` (`Action`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Entreprise de location de film`.`Infos catégorie de films_has_Suivi des entrées`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Entreprise de location de film`.`Infos catégorie de films_has_Suivi des entrées` (
  `Infos catégorie de films_Action` INT NOT NULL,
  `Suivi des entrées_Date de création` DATE NOT NULL,
  PRIMARY KEY (`Infos catégorie de films_Action`, `Suivi des entrées_Date de création`),
  INDEX `fk_Infos catégorie de films_has_Suivi des entrées_Suivi d_idx` (`Suivi des entrées_Date de création` ASC) VISIBLE,
  INDEX `fk_Infos catégorie de films_has_Suivi des entrées_Infos c_idx` (`Infos catégorie de films_Action` ASC) VISIBLE,
  CONSTRAINT `fk_Infos catégorie de films_has_Suivi des entrées_Infos cat1`
    FOREIGN KEY (`Infos catégorie de films_Action`)
    REFERENCES `Entreprise de location de film`.`Infos catégorie de films` (`Action`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Infos catégorie de films_has_Suivi des entrées_Suivi des1`
    FOREIGN KEY (`Suivi des entrées_Date de création`)
    REFERENCES `Entreprise de location de film`.`Suivi des entrées` (`Date de création`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
